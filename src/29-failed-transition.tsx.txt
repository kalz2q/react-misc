// react-transition-groupにする
// なぜならframer-motion, react-springは範囲が広すぎる
// animation全体をやりたいわけではない。
// 今はむしろreactを理解する助けになるようなツールが使いたい
// とりあえず
// https://qiita.com/takeshisakuma/items/67578529789939c900ff
// をなぞる
import React, { useState } from "react";
import './App.css';
import ReactDOM from "react-dom";
import * as ReactRouterDOM from "react-router-dom";

// ---

import { Transition } from "react-transition-group";
// import Style from "./singleTransition.module.scss";

//トランジションのスタイル4種類を定義(使わないものは省略可能)
const transitionStyle = {
  entering: {
    transition: "all 1s ease",
    transform: "translateY(220px) ",
    backgroundColor: "red"
  },
  entered: {
    transition: "all 1s ease",
    transform: "translateY(220px) ",
    backgroundColor: "green"
  },
  exiting: {
    transition: "all 1s ease",
    transform: "translateY(0)",
    backgroundColor: "blue",
  },
  exited: {
    transition: "all 1s ease",
    transform: "translateY(0)",
    backgroundColor: "gray",
  },
};

type transitionType = {
  entering: {
    transition: string,
    transform: string,
    backgroundColor: string
  },
  entered: {
    transition: string,
    transform: string,
    backgroundColor: string
  },
  exiting: {
    transition: string,
    transform: string,
    backgroundColor: string,
  },
  exited: {
    transition: string,
    transform: string,
    backgroundColor: string,
  },
}


//SingleTransitionコンポーネント
const SingleTransition = () => {

  //マウントの状態を管理
  const [mount, setMount] = useState(false);

  //マウントのオンオフを切り替える
  const changer = () => {
    setMount(!mount);
  };

  return (

    <div className="wrapper">

      <button onClick={changer}>inの切り替え</button>

      <div className="circleGroup">

        <div className="circleMember">

          <Transition in={mount} timeout={1000} >

            {(state) => // state
              <div className="circleShape" style={transitionStyle[state]} >
                {/* <div className="circleShape"  > */}
                <div>
                  <p className="circleText"> {mount ? "in=true" : "in=false"} </p>
                  <p className="circleText"> {state}</p>
                </div>
              </div>}

          </Transition>

        </div>

      </div>

    </div>

  );

}


const App = () => {
  return (
    <div className="App">
      {/* <ChainTransition /> */}
      <SingleTransition />
    </div>
  );
};

export default App;
